// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LineChart snapShot testing renders LineChart correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_5"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone6"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_5"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_5"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine2"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID101"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle001"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle0011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone7"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                          content: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders enabledLegendsWrapLines correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_28"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone29"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_28"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_28"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine25"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID2401"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle2301"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle23011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div
        className=
            ms-FocusZone
            ms-OverflowSet
            &:focus {
              outline: none;
            }
            {
              display: flex;
              flex-wrap: wrap;
              justify-content: unset;
              position: relative;
            }
        data-focuszone-id="FocusZone30"
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDownCapture={[Function]}
        role="listbox"
      >
        <div
          className=
              ms-OverflowSet-item
              {
                display: inherit;
                flex-shrink: 0;
              }
        >
          <button
            aria-label="metaData1"
            aria-posinset={1}
            aria-selected={false}
            aria-setsize={1}
            className=

                {
                  align-items: center;
                  background: none;
                  border: none;
                  cursor: pointer;
                  display: flex;
                  outline: transparent;
                  padding-bottom: 8px;
                  padding-left: 8px;
                  padding-right: 8px;
                  padding-top: 8px;
                  position: relative;
                }
                &::-moz-focus-inner {
                  border: 0;
                }
                .ms-Fabric--isFocusVisible &:focus:after {
                  border: 1px solid transparent;
                  bottom: 1px;
                  content: "";
                  left: 1px;
                  outline: 1px solid #605e5c;
                  position: absolute;
                  right: 1px;
                  top: 1px;
                  z-index: 1;
                }
                @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                  outline-color: #605e5c;
                }
            data-is-focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            role="option"
          >
            <div
              className=

                  {
                    background-color: red;
                    background-image: ;
                    border-color: red;
                    border: 1px solid;
                    height: 12px;
                    margin-right: 8px;
                    opacity: ;
                    width: 12px;
                  }
                  @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                    content: linear-gradient(to right, red, red);
                    opacity: ;
                  }
            />
            <div
              className=

                  {
                    -moz-osx-font-smoothing: grayscale;
                    -webkit-font-smoothing: antialiased;
                    color: #323130;
                    font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                    font-size: 12px;
                    font-weight: 400;
                    line-height: 16px;
                    opacity: ;
                  }
            >
              metaData1
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders hideLegend correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_13"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone14"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_13"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_13"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine10"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID901"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle801"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle8011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders hideTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_20"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone21"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_20"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_20"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine17"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID1601"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle1501"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle15011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone22"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                          content: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders showXAxisLablesTooltip correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_36"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone37"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_36"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_36"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine33"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID3201"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle3101"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle31011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone38"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                          content: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders wrapXAxisLables correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_44"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone45"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_44"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_44"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine41"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID4001"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle3901"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle39011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone46"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                          content: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`LineChart snapShot testing renders yAxisTickFormat correctly 1`] = `
<div
  className=

      {
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: flex;
        flex-direction: column;
        font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
        font-size: 14px;
        font-weight: 400;
        height: 100%;
        overflow: hidden;
        width: 100%;
      }
  id="chart_52"
  role="presentation"
>
  <div
    className=
        ms-FocusZone
        &:focus {
          outline: none;
        }
    data-focuszone-id="FocusZone53"
    onFocus={[Function]}
    onKeyDown={[Function]}
    onMouseDownCapture={[Function]}
  >
    <svg
      height={0}
      style={
        Object {
          "display": "block",
        }
      }
      width={0}
    >
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
              width: 1px;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
        id="xAxisGElementchart_52"
        transform="translate(0, -35)"
      />
      <g
        className=

            & text {
              -moz-osx-font-smoothing: grayscale;
              -webkit-font-smoothing: antialiased;
              fill: #323130;
              font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
              font-size: 10px;
              font-weight: 400;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& text {
              fill: rgb(179, 179, 179);
            }
            & path {
              display: none;
            }
            & line {
              opacity: 0.2;
              stroke: #323130;
            }
            @media screen and (-ms-high-contrast: white-on-black), (forced-colors: white-on-black){& line {
              opacity: 0.1;
              stroke: rgb(179, 179, 179);
            }
        id="yAxisGElementchart_52"
        transform="translate(40, 0)"
      />
      <g>
        <line
          id="verticalLine49"
          stroke="steelblue"
          strokeDasharray="5,5"
          visibility="hidden"
          x1={0}
          x2={0}
          y1={0}
          y2={0}
        />
        <g>
          <line
            id="lineID4801"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeLinecap="round"
            strokeWidth={4}
            x1={40}
            x2={-20}
            y1={-0.625}
            y2={20}
          />
          <path
            d="M39.5 -0.625
     A0.5 0.5 0 1 0 40.5 -0.625
     M39.5 -0.625
     A 0.5 0.5 0 1 1 40.5 -0.625
     "
            data-is-focusable={true}
            fill="red"
            id="circle4701"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
          <path
            d="M-20.5 20
     A0.5 0.5 0 1 0 -19.5 20
     M-20.5 20
     A 0.5 0.5 0 1 1 -19.5 20
     "
            data-is-focusable={true}
            fill="red"
            id="circle47011L"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onMouseMove={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            opacity={1}
            stroke="red"
            strokeWidth={2}
          />
        </g>
      </g>
    </svg>
  </div>
  <div
    className=

        {
          margin-left: 20px;
          margin-top: 8px;
        }
  >
    <div
      className=

          {
            align-items: center;
            margin-bottom: 0;
            margin-left: -8px;
            margin-right: 0;
            margin-top: -8px;
            white-space: nowrap;
            width: 100%;
          }
    >
      <div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-automation-id="visibleContent"
            style={
              Object {
                "position": "fixed",
                "visibility": "hidden",
              }
            }
          >
            <div
              className=
                  ms-FocusZone
                  ms-OverflowSet
                  &:focus {
                    outline: none;
                  }
                  {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: unset;
                    position: relative;
                  }
              data-focuszone-id="FocusZone54"
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMouseDownCapture={[Function]}
              role="listbox"
            >
              <div
                className=
                    ms-OverflowSet-item
                    {
                      display: inherit;
                      flex-shrink: 0;
                    }
              >
                <button
                  aria-label="metaData1"
                  aria-posinset={1}
                  aria-selected={false}
                  aria-setsize={1}
                  className=

                      {
                        align-items: center;
                        background: none;
                        border: none;
                        cursor: pointer;
                        display: flex;
                        outline: transparent;
                        padding-bottom: 8px;
                        padding-left: 8px;
                        padding-right: 8px;
                        padding-top: 8px;
                        position: relative;
                      }
                      &::-moz-focus-inner {
                        border: 0;
                      }
                      .ms-Fabric--isFocusVisible &:focus:after {
                        border: 1px solid transparent;
                        bottom: 1px;
                        content: "";
                        left: 1px;
                        outline: 1px solid #605e5c;
                        position: absolute;
                        right: 1px;
                        top: 1px;
                        z-index: 1;
                      }
                      @media screen and (-ms-high-contrast: active), (forced-colors: active){.ms-Fabric--isFocusVisible &:focus:after {
                        outline-color: #605e5c;
                      }
                  data-is-focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="option"
                >
                  <div
                    className=

                        {
                          background-color: red;
                          background-image: ;
                          border-color: red;
                          border: 1px solid;
                          height: 12px;
                          margin-right: 8px;
                          opacity: ;
                          width: 12px;
                        }
                        @media screen and (-ms-high-contrast: active), (forced-colors: active){& {
                          content: linear-gradient(to right, red, red);
                          opacity: ;
                        }
                  />
                  <div
                    className=

                        {
                          -moz-osx-font-smoothing: grayscale;
                          -webkit-font-smoothing: antialiased;
                          color: #323130;
                          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                          font-size: 12px;
                          font-weight: 400;
                          line-height: 16px;
                          opacity: ;
                        }
                  >
                    metaData1
                  </div>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
