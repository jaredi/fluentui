pr:
  - master

# There's a separate pipeline for CI which also uses this file, but with a trigger override in the UI
# https://dev.azure.com/uifabric/fabricpublic/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=164&view=Tab_Triggers
trigger: none

variables:
  - ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      - name: sinceArg
        value: --since $(targetBranch)

  - group: fabric-variables

  - template: .devops/templates/variables.yml

pool: 'Self Host Ubuntu'

jobs:
  - job: BuildTestLint
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - script: |
          yarn checkchange
        displayName: check change

      ## Manually call prelint since lage calls lint per package, not per repo
      - script: |
          yarn prelint
        displayName: prelint (satisfied, syncpack, lint-files)

      - script: |
          if [[ -n "$(targetBranch)" ]]; then
            yarn format --since $(targetBranch) --check
          else
            yarn format --all --check
          fi
        displayName: check formatting

      ## Danger.js checks for Fluent UI N*
      - script: |
          yarn danger ci
        displayName: danger
        condition: variables.isPR
        env:
          DANGER_GITHUB_API_TOKEN: $(DANGER_GITHUB_API_TOKEN)

      - script: |
          yarn buildci --no-cache $(sinceArg)
        displayName: build, test, lint

      - template: .devops/templates/cleanup.yml
        parameters:
          checkForChangedFiles: false

  - job: Deploy
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - script: |
          yarn bundle --no-cache $(sinceArg)
        displayName: bundle

      ## This runs regardless of scope, the app will adapt to the scope as well
      - script: |
          yarn workspace @fluentui/pr-deploy-site generate:site
        displayName: generate PR Deploy Site

      - publish: $(Build.ArtifactStagingDirectory)
        artifact: Build-PR-$(Build.BuildNumber)

      - task: AzureUpload@2
        displayName: Upload PR deploy site
        inputs:
          azureSubscription: $(azureSubscription)
          BlobPrefix: $(deployBasePath)
          ContainerName: '$web'
          SourcePath: 'apps/pr-deploy-site/dist'
          storage: fabricweb

      - task: GithubPRStatus@0
        displayName: 'Update PR deploy site github status'
        inputs:
          githubOwner: microsoft
          githubRepo: fluentui
          githubContext: 'Pull request demo site'
          githubDescription: 'Click "Details" to go to the deployed demo site for this pull request'
          githubTargetLink: 'http://fabricweb.z5.web.core.windows.net/pr-deploy-site/$(Build.SourceBranch)/'

      - template: .devops/templates/cleanup.yml

  - job: ScreenerNorthstar
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - script: yarn workspace @fluentui/docs vr:build
        displayName: build FUI N* VR Test

      - task: AzureUpload@2
        displayName: Upload N* doc site
        inputs:
          azureSubscription: $(azureSubscription)
          BlobPrefix: '$(deployBasePath)/react-northstar'
          CacheControl: 'public, max-age=600000'
          ContainerName: '$web'
          SourcePath: 'packages/fluentui/docs/dist'
          storage: fabricweb

      - script: yarn workspace @fluentui/docs vr:test
        displayName: start FUI N* VR Test
        env:
          SCREENER_API_KEY: $(screener.key)

      - template: .devops/templates/cleanup.yml

  - job: Screener
    workspace:
      clean: all
    steps:
      - template: .devops/templates/tools.yml

      - task: Bash@3
        inputs:
          filePath: yarn-ci.sh
        displayName: yarn

      - script: |
          yarn lage screener --to vr-tests --debug --verbose --no-cache
        displayName: run VR Test
        env:
          SCREENER_API_KEY: $(screener.key)

      - template: .devops/templates/cleanup.yml
